# Generated by Django 3.2.4 on 2021-06-29 16:20

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Customer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('email', models.EmailField(db_index=True, max_length=225, unique=True)),
                ('first_name', models.CharField(max_length=225)),
                ('last_name', models.CharField(max_length=225)),
                ('contact_no', models.IntegerField()),
                ('city', models.CharField(choices=[('Nuwara Eliya', 'Nuwara Eliya'), ('Kalutara', 'Kalutara'), ('Ampara', 'Ampara'), ('Mullaitivu', 'Mullaitivu'), ('Hambantota', 'Hambantota'), ('Ratnapura', 'Ratnapura'), ('Colombo', 'Colombo'), ('Galle', 'Galle'), ('Kilinochchi', 'Kilinochchi'), ('Vavuniya', 'Vavuniya'), ('Badulla', 'Badulla'), ('Batticaloa', 'Batticaloa'), ('Puttalam', 'Puttalam'), ('Anuradhapura', 'Anuradhapura'), ('Mannar', 'Mannar'), ('Matale', 'Matale'), ('Kandy', 'Kandy'), ('Polonnaruwa', 'Polonnaruwa'), ('Trincomalee', 'Trincomalee'), ('Kegalle', 'Kegalle'), ('Matara', 'Matara'), ('Jaffna', 'Jaffna'), ('Monaragala', 'Monaragala'), ('Kurunegala', 'Kurunegala'), ('Gampaha', 'Gampaha')], max_length=225)),
                ('is_active', models.BooleanField(default=True)),
                ('is_staff', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
